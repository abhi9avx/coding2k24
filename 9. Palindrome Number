Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?
........

class Solution {
    public boolean isPalindrome(int x) {
        // Special case: Negative numbers and numbers ending in 0 are not palindromes
        if (x < 0 || (x % 10 == 0 && x != 0)) {
            return false;
        }
        
        int reversedNum = 0;
        int originalX = x;
        
        while (x > 0) {
            // Extract the last digit of x and add it to reversedNum
            int digit = x % 10;
            reversedNum = reversedNum * 10 + digit;
            x /= 10;  // Remove the last digit from x
        }
        
        // Compare the reversed number with the original number
        return reversedNum == originalX;
    }
}
