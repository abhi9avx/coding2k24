You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

............

class Solution {
    public char findTheDifference(String s, String t) {
        int[] charFreq = new int[26];

        // Increment character frequencies for string s
        for (char c : s.toCharArray()) {
            charFreq[c - 'a']++;
        }

        // Decrement character frequencies for string t
        for (char c : t.toCharArray()) {
            charFreq[c - 'a']--;
        }

        // Find the character with a non-zero frequency
        for (int i = 0; i < 26; i++) {
            if (charFreq[i] != 0) {
                return (char) (i + 'a');
            }
        }

        return '\0'; // Return null character if no added letter is found
    }
}
