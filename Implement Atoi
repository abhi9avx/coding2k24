class Solution
{
    int atoi(String s) {
        // Check if the string is empty
        if (s == null || s.length() == 0)
            return -1;
        
        int result = 0;
        int startIndex = 0;
        boolean isNegative = false;
        
        // Check for negative sign
        if (s.charAt(0) == '-') {
            isNegative = true;
            startIndex = 1;
        }
        
        // Iterate over the string to convert characters to integers
        for (int i = startIndex; i < s.length(); i++) {
            char c = s.charAt(i);
            
            // Check if the character is numeric
            if (Character.isDigit(c)) {
                int digit = c - '0'; // Convert char to int
                
                // Check for overflow
                if (isNegative && (Integer.MIN_VALUE / 10 > result || Integer.MIN_VALUE / 10 == result && Integer.MIN_VALUE % 10 > digit))
                    return -1;
                else if (!isNegative && (Integer.MAX_VALUE / 10 < result || Integer.MAX_VALUE / 10 == result && Integer.MAX_VALUE % 10 < digit))
                    return -1;
                
                // Update result
                result = result * 10 + digit;
            } else {
                // If non-numeric character encountered, return -1
                return -1;
            }
        }
        
        // If the number is negative, make it negative
        if (isNegative)
            result *= -1;
        
        return result;
    }
}
